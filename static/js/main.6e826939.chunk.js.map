{"version":3,"sources":["App.js","index.js"],"names":["App","_useState","useState","songName","songArtist","songSrc","songAvatar","_useState2","Object","slicedToArray","currentMusicDetails","setCurrentMusicDetails","_useState3","_useState4","audioProgress","setAudioProgress","_useState5","_useState6","isAudioPlaying","setIsAudioPlaying","_useState7","_useState8","musicIndex","setMusicIndex","_useState9","_useState10","musicTotalLength","setMusicTotalLength","_useState11","_useState12","musicCurrentTime","setMusicCurrentTime","_useState13","_useState14","videoIndex","setVideoIndex","currentAudio","useRef","avatarClass","_useState15","_useState16","avatarClassIndex","setAvatarClassIndex","musicAPI","handleNextSong","length","updateCurrentMusicDetails","setNumber","number","musicObject","current","src","play","vidArray","react_default","a","createElement","Fragment","className","ref","onEnded","onTimeUpdate","minutes","Math","floor","duration","seconds","musicTotalLength0","concat","currentMin","currentTime","currentSec","musicCurrentT","progress","parseInt","isNaN","loop","muted","autoPlay","onClick","alt","id","type","name","value","onChange","e","target","paused","pause","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.6e826939.chunk.js","sourcesContent":["import React from 'react';\r\nimport { useState, useRef } from 'react';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n\r\n  const [currentMusicDetails, setCurrentMusicDetails] = useState({\r\n    songName: 'Tadaima Home',\r\n    songArtist: 'Hiragi Minami',\r\n    songSrc: './Assets/songs/Tadaima Hōmu.mp3',\r\n    songAvatar: './Assets/Images/totoro.jpeg'\r\n  })\r\n  // UseStates variables \r\n  const [audioProgress, setAudioProgress] = useState(0);\r\n  const [isAudioPlaying, setIsAudioPlaying] = useState(false);\r\n  const [musicIndex, setMusicIndex] = useState(0);\r\n  const [musicTotalLength, setMusicTotalLength] = useState('04 : 38');\r\n  const [musicCurrentTime, setMusicCurrentTime] = useState('00 : 00');\r\n  const [videoIndex, setVideoIndex] = useState(0);\r\n\r\n  const currentAudio = useRef()\r\n\r\n  const handleMusicProgressBar = (e) => {\r\n    setAudioProgress(e.target.value);\r\n    currentAudio.current.currentTime = e.target.value * currentAudio.current.duration / 100;\r\n  }\r\n\r\n  // Change Avatar Class\r\n  let avatarClass = ['objectFitCover', 'objectFitContain', 'none']\r\n  const [avatarClassIndex, setAvatarClassIndex] = useState(0);\r\n\r\n  const handleAvatar = () => {\r\n    if (avatarClassIndex >= avatarClass.length -1 ) {\r\n      setAvatarClassIndex(0)\r\n    } else {\r\n      setAvatarClassIndex(avatarClassIndex + 1)\r\n    }\r\n  }\r\n\r\n  // Play Audio Function\r\n  const handleAudioPlay = () => {\r\n    if (currentAudio.current.paused) {\r\n      currentAudio.current.play();\r\n      setIsAudioPlaying(true)\r\n    } else {\r\n      currentAudio.current.pause();\r\n      setIsAudioPlaying(false)\r\n    }\r\n  }\r\n\r\n  const musicAPI = [\r\n    {\r\n      songName: 'Tadaima Home',\r\n      songArtist: 'Hiragi Minami',\r\n      songSrc: './Assets/songs/Tadaima Hōmu.mp3',\r\n      songAvatar: './Assets/Images/totoro.jpeg'\r\n    },\r\n    {\r\n      songName: 'Amanojaku',\r\n      songArtist: 'Akie',\r\n      songSrc: './Assets/songs/Amanojaku.mp3',\r\n      songAvatar: './Assets/Images/chihiro.jpeg'\r\n    },\r\n    {\r\n      songName: 'Sukidakara',\r\n      songArtist: 'Yuika',\r\n      songSrc: './Assets/songs/Sukidakara.mp3',\r\n      songAvatar: './Assets/Images/kiki.jpg'\r\n    },\r\n    {\r\n      songName: 'Yubiwa To Aikagi',\r\n      songArtist: 'Hazzie',\r\n      songSrc: './Assets/songs/Hazzie_feat._AI_-_Yubiwa_To_Aikagi.mp3',\r\n      songAvatar: './Assets/Images/oceanwave.jpeg'\r\n    },\r\n    {\r\n      songName: 'Rain',\r\n      songArtist: 'Chata',\r\n      songSrc: './Assets/songs/Rain_chata.mp3',\r\n      songAvatar: './Assets/Images/poppyhill.jpeg'\r\n    },\r\n    {\r\n      songName: 'Sekai Wa Koi Ni Ochiteiru',\r\n      songArtist: 'Chico',\r\n      songSrc: './Assets/songs/SekaiWaKoiNiOchiteiru.mp3',\r\n      songAvatar: './Assets/Images/howlscastle.jpeg'\r\n    },\r\n    {\r\n      songName: 'Baby I Love You',\r\n      songArtist: 'Tee',\r\n      songSrc: './Assets/songs/BabyILoveYou.webm',\r\n      songAvatar: './Assets/Images/mononoke.jpeg'\r\n    }\r\n  ]\r\n\r\n  const handleNextSong = () => {\r\n    if (musicIndex >= musicAPI.length - 1) {\r\n      let setNumber = 0;\r\n      setMusicIndex(setNumber);\r\n      updateCurrentMusicDetails(setNumber);\r\n    } else {\r\n      let setNumber = musicIndex + 1;\r\n      setMusicIndex(setNumber);\r\n      updateCurrentMusicDetails(setNumber);\r\n    }\r\n  }\r\n\r\n  const handlePrevSong = () => {\r\n    if (musicIndex === 0) {\r\n      let setNumber = musicAPI.length - 1;\r\n      setMusicIndex(setNumber);\r\n      updateCurrentMusicDetails(setNumber);\r\n    } else {\r\n      let setNumber = musicIndex - 1;\r\n      setMusicIndex(setNumber);\r\n      updateCurrentMusicDetails(setNumber);\r\n    }\r\n  }\r\n\r\n  const updateCurrentMusicDetails = (number) => {\r\n    let musicObject = musicAPI[number];\r\n    currentAudio.current.src = musicObject.songSrc;\r\n    currentAudio.current.play();\r\n    setCurrentMusicDetails({\r\n      songName: musicObject.songName,\r\n      songArtist: musicObject.songArtist,\r\n      songSrc: musicObject.songSrc,\r\n      songAvatar: musicObject.songAvatar\r\n    })\r\n    setIsAudioPlaying(true);\r\n  }\r\n\r\n  const handleAudioUpdate = () => {\r\n    //Input total length of the audio \r\n    let minutes = Math.floor(currentAudio.current.duration / 60);\r\n    let seconds = Math.floor(currentAudio.current.duration % 60);\r\n    let musicTotalLength0 = `${minutes <10 ? `0${minutes}` : minutes} : ${seconds <10 ? `0${seconds}` : seconds}`;\r\n    setMusicTotalLength(musicTotalLength0);\r\n\r\n    //Input Music Current Time\r\n    let currentMin = Math.floor(currentAudio.current.currentTime / 60);\r\n    let currentSec = Math.floor(currentAudio.current.currentTime % 60);\r\n    let musicCurrentT = `${currentMin  <10 ? `0${currentMin}` : currentMin} : ${currentSec <10 ? `0${currentSec}` : currentSec}`;\r\n    setMusicCurrentTime(musicCurrentT);\r\n\r\n    const progress = parseInt((currentAudio.current.currentTime / currentAudio.current.duration) * 100);\r\n    setAudioProgress(isNaN(progress)? 0 : progress);\r\n\r\n  }\r\n\r\n  const vidArray = ['./Assets/Videos/paris.mp4', './Assets/Videos/night_sky.mp4', './Assets/Videos/sunset.mp4',\r\n  './Assets/Videos/rain.mp4', './Assets/Videos/sunrise.mp4', './Assets/Videos/candle.mp4'];\r\n\r\n  const handleChangeBackground = () => {\r\n    if (videoIndex >= vidArray.length - 1) {\r\n      setVideoIndex(0);\r\n    } else {\r\n      setVideoIndex(videoIndex + 1);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n    <div className=\"container\">\r\n      <audio src='./Assets/songs/Tadaima Hōmu.mp3' ref={currentAudio} onEnded={handleNextSong}\r\n      onTimeUpdate={handleAudioUpdate}></audio>\r\n      <video src={vidArray[videoIndex]} loop muted autoPlay className=\"backgroundVideo\"></video>\r\n      <div className=\"blackScreen\"></div>\r\n      <div className=\"music-Container\">\r\n        <p className=\"musicPlayer\">Music Player</p>\r\n        <p className=\"music-Head-Name\">{currentMusicDetails.songName}</p>\r\n        <p className=\"music-Artist-Name\">{currentMusicDetails.songArtist}</p>\r\n        <img src={currentMusicDetails.songAvatar} className={avatarClass[avatarClassIndex]} \r\n        onClick={handleAvatar} alt=\"song Avatar\" id=\"songAvatar\" />\r\n        <div className=\"musicTimerDiv\">\r\n          <p className=\"musicCurrentTime\">{musicCurrentTime}</p>\r\n          <p className=\"musicTotalLength\">{musicTotalLength}</p>\r\n        </div>\r\n        <input type=\"range\" name=\"musicProgressBar\" className=\"musicProgressBar\" value={audioProgress}\r\n        onChange={handleMusicProgressBar} />\r\n        <div className=\"musicControlers\">\r\n          <i className='fa-solid fa-backward musicControler' onClick={handlePrevSong}></i>\r\n          <i className={`fa-solid ${isAudioPlaying? 'fa-pause-circle' : 'fa-circle-play'} playBtn`} onClick={handleAudioPlay}></i>\r\n          <i className='fa-solid fa-forward musicControler' onClick={handleNextSong}></i>\r\n        </div>\r\n      </div>\r\n      <div className=\"changeBackBtn\" onClick={handleChangeBackground}>\r\n        Change Background\r\n      </div>\r\n    </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport App from './App';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n);\r\n\r\n\r\n"],"sourceRoot":""}